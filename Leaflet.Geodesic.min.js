"use strict";"undefined"==typeof Number.prototype.toRadians&&(Number.prototype.toRadians=function(){return this*Math.PI/180}),"undefined"==typeof Number.prototype.toDegrees&&(Number.prototype.toDegrees=function(){return 180*this/Math.PI});var INTERSECT_LNG=179.999;L.Geodesic=L.Polyline.extend({options:{color:"blue",steps:10,dash:1,wrap:!0},initialize:function(t,a){this.options=this._merge_options(this.options,a),this.datum={},this.datum.ellipsoid={a:6378137,b:6356752.3142,f:1/298.257223563},this._latlngs=this.options.dash<1?this._generate_GeodesicDashed(t):this._generate_Geodesic(t),L.Polyline.prototype.initialize.call(this,this._latlngs,this.options)},setLatLngs:function(t){this._latlngs=this.options.dash<1?this._generate_GeodesicDashed(t):this._generate_Geodesic(t),L.Polyline.prototype.setLatLngs.call(this,this._latlngs)},getStats:function(){var t,a,s={distance:0,points:0,polygons:this._latlngs.length};for(t=0;t<this._latlngs.length;t++)for(s.points+=this._latlngs[t].length,a=0;a<this._latlngs[t].length-1;a++)s.distance+=this._vincenty_inverse(this._latlngs[t][a],this._latlngs[t][a+1]).distance;return s},geoJson:function(t){var a=L.GeoJSON.asFeature(t),s="FeatureCollection"===a.type?a.features:[a];this._latlngs=[],s.forEach(function(t){var a="Feature"===t.type?t.geometry:t,s=a.coordinates;switch(a.type){case"LineString":this._latlngs.push(this._generate_Geodesic([L.GeoJSON.coordsToLatLngs(s,0)]));break;case"MultiLineString":case"Polygon":this._latlngs.push(this._generate_Geodesic(L.GeoJSON.coordsToLatLngs(s,1)));break;case"Point":case"MultiPoint":console.log("Dude, points can't be drawn as geodesic lines...");break;default:console.log("Drawing "+a.type+" as a geodesic is not supported. Skipping...")}}),L.Polyline.prototype.setLatLngs.call(this,this._latlngs)},createCircle:function(t,a){var s,n=0,i={lat:0,lng:0,brg:0};this._latlngs=[],this._latlngs[n]=[];var e=this._vincenty_direct(L.latLng(t),0,a,this.options.wrap);for(i=L.latLng(e.lat,e.lng),this._latlngs[n].push(i),s=1;s<=this.options.steps;){e=this._vincenty_direct(L.latLng(t),360/this.options.steps*s,a,this.options.wrap);var l=L.latLng(e.lat,e.lng);if(Math.abs(l.lng-i.lng)>180){var o=this._vincenty_inverse(i,l),h=this._intersection(i,o.initialBearing,{lat:-89,lng:l.lng-i.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);h?(this._latlngs[n].push(L.latLng(h.lat,h.lng)),n++,this._latlngs[n]=[],i=L.latLng(h.lat,-h.lng),this._latlngs[n].push(i)):(n++,this._latlngs[n]=[],this._latlngs[n].push(l),i=l,s++)}else this._latlngs[n].push(l),i=l,s++}L.Polyline.prototype.setLatLngs.call(this,this._latlngs)},_generate_Geodesic:function(t){var a,s,n,i,e,l=[],o=0;for(s=0;s<t.length;s++){for(l[o]=[],n=0;n<t[s].length-1;n++)if(i=L.latLng(t[s][n]),e=L.latLng(t[s][n+1]),!i.equals(e)){var h=this._vincenty_inverse(i,e),r=i;for(l[o].push(r),a=1;a<=this.options.steps;){var g=this._vincenty_direct(i,h.initialBearing,h.distance/this.options.steps*a,this.options.wrap),c=L.latLng(g.lat,g.lng);if(Math.abs(c.lng-r.lng)>180){var M=this._intersection(i,h.initialBearing,{lat:-89,lng:c.lng-r.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);M?(l[o].push(L.latLng(M.lat,M.lng)),o++,l[o]=[],r=L.latLng(M.lat,-M.lng),l[o].push(r)):(o++,l[o]=[],l[o].push(c),r=c,a++)}else l[o].push(c),r=c,a++}}o++}return l},_generate_GeodesicDashed:function(t){var a,s,n,i=[],e=0;for(s=0;s<t.length;s++){for(i[e]=[],n=0;n<t[s].length-1;n++){var l=this._vincenty_inverse(L.latLng(t[s][n]),L.latLng(t[s][n+1])),o=L.latLng(t[s][n]);for(i[e].push(o),a=1;a<=this.options.steps;){var h=this._vincenty_direct(L.latLng(t[s][n]),l.initialBearing,l.distance/this.options.steps*a-l.distance/this.options.steps*(1-this.options.dash),this.options.wrap),r=L.latLng(h.lat,h.lng);if(Math.abs(r.lng-o.lng)>180){var g=this._intersection(L.latLng(t[s][n]),l.initialBearing,{lat:-89,lng:r.lng-o.lng>0?-INTERSECT_LNG:INTERSECT_LNG},0);g?(i[e].push(L.latLng(g.lat,g.lng)),e++,i[e]=[],o=L.latLng(g.lat,-g.lng),i[e].push(o)):(e++,i[e]=[],i[e].push(r),o=r,a++)}else{i[e].push(r),e++;var c=this._vincenty_direct(L.latLng(t[s][n]),l.initialBearing,l.distance/this.options.steps*a,this.options.wrap);i[e]=[],i[e].push(L.latLng(c.lat,c.lng)),a++}}}e++}return i},_vincenty_direct:function(t,a,s,n){var i,e,l,o,h=t.lat.toRadians(),r=t.lng.toRadians(),g=a.toRadians(),c=s,M=this.datum.ellipsoid.a,p=this.datum.ellipsoid.b,u=this.datum.ellipsoid.f,d=Math.sin(g),_=Math.cos(g),L=(1-u)*Math.tan(h),v=1/Math.sqrt(1+L*L),f=L*v,y=Math.atan2(L,_),N=v*d,P=1-N*N,I=P*(M*M-p*p)/(p*p),R=1+I/16384*(4096+I*(-768+I*(320-175*I))),b=I/1024*(256+I*(-128+I*(74-47*I))),G=c/(p*R),m=0;do{o=Math.cos(2*y+G),e=Math.sin(G),l=Math.cos(G);var T=b*e*(o+b/4*(l*(-1+2*o*o)-b/6*o*(-3+4*e*e)*(-3+4*o*o)));i=G,G=c/(p*R)+T}while(Math.abs(G-i)>1e-12&&++m);var E,D=f*e-v*l*_,S=Math.atan2(f*l+v*e*_,(1-u)*Math.sqrt(N*N+D*D)),w=Math.atan2(e*d,v*l-f*e*_),B=u/16*P*(4+u*(4-3*P)),C=w-(1-B)*u*N*(G+B*e*(o+B*l*(-1+2*o*o)));E=n?(r+C+3*Math.PI)%(2*Math.PI)-Math.PI:r+C;var q=Math.atan2(N,-D);return{lat:S.toDegrees(),lng:E.toDegrees(),finalBearing:q.toDegrees()}},_vincenty_inverse:function(t,a){var s,n,i,e,l,o,h,r,g=t.lat.toRadians(),c=t.lng.toRadians(),M=a.lat.toRadians(),p=a.lng.toRadians(),u=this.datum.ellipsoid.a,d=this.datum.ellipsoid.b,_=this.datum.ellipsoid.f,L=p-c,v=(1-_)*Math.tan(g),f=1/Math.sqrt(1+v*v),y=v*f,N=(1-_)*Math.tan(M),P=1/Math.sqrt(1+N*N),I=N*P,R=L,b=0;do{h=Math.sin(R),r=Math.cos(R);var G=P*h*(P*h)+(f*I-y*P*r)*(f*I-y*P*r);if(i=Math.sqrt(G),0==i)return 0;l=y*I+f*P*r,o=Math.atan2(i,l);var m=f*P*h/i;n=1-m*m,e=l-2*y*I/n,isNaN(e)&&(e=0);var T=_/16*n*(4+_*(4-3*n));s=R,R=L+(1-T)*_*m*(o+T*i*(e+T*l*(-1+2*e*e)))}while(Math.abs(R-s)>1e-12&&++b<100);if(b>=100)return console.log("Formula failed to converge. Altering target position."),this._vincenty_inverse(t,{lat:a.lat,lng:a.lng-.01});var E=n*(u*u-d*d)/(d*d),D=1+E/16384*(4096+E*(-768+E*(320-175*E))),S=E/1024*(256+E*(-128+E*(74-47*E))),w=S*i*(e+S/4*(l*(-1+2*e*e)-S/6*e*(-3+4*i*i)*(-3+4*e*e))),B=d*D*(o-w),C=Math.atan2(P*h,f*I-y*P*r),q=Math.atan2(f*h,-y*P+f*I*r);return B=Number(B.toFixed(3)),{distance:B,initialBearing:C.toDegrees(),finalBearing:q.toDegrees()}},_intersection:function(t,a,s,n){var i=t.lat.toRadians(),e=t.lng.toRadians(),l=s.lat.toRadians(),o=s.lng.toRadians(),h=Number(a).toRadians(),r=Number(n).toRadians(),g=l-i,c=o-e,M=2*Math.asin(Math.sqrt(Math.sin(g/2)*Math.sin(g/2)+Math.cos(i)*Math.cos(l)*Math.sin(c/2)*Math.sin(c/2)));if(0==M)return null;var p=Math.acos((Math.sin(l)-Math.sin(i)*Math.cos(M))/(Math.sin(M)*Math.cos(i)));isNaN(p)&&(p=0);var u,d,_=Math.acos((Math.sin(i)-Math.sin(l)*Math.cos(M))/(Math.sin(M)*Math.cos(l)));Math.sin(o-e)>0?(u=p,d=2*Math.PI-_):(u=2*Math.PI-p,d=_);var L=(h-u+Math.PI)%(2*Math.PI)-Math.PI,v=(d-r+Math.PI)%(2*Math.PI)-Math.PI;if(0==Math.sin(L)&&0==Math.sin(v))return null;if(Math.sin(L)*Math.sin(v)<0)return null;var f=Math.acos(-Math.cos(L)*Math.cos(v)+Math.sin(L)*Math.sin(v)*Math.cos(M)),y=Math.atan2(Math.sin(M)*Math.sin(L)*Math.sin(v),Math.cos(v)+Math.cos(L)*Math.cos(f)),N=Math.asin(Math.sin(i)*Math.cos(y)+Math.cos(i)*Math.sin(y)*Math.cos(h)),P=Math.atan2(Math.sin(h)*Math.sin(y)*Math.cos(i),Math.cos(y)-Math.sin(i)*Math.sin(N)),I=e+P;return I=(I+3*Math.PI)%(2*Math.PI)-Math.PI,{lat:N.toDegrees(),lng:I.toDegrees()}},_merge_options:function(t,a){var s={};for(var n in t)s[n]=t[n];for(var n in a)s[n]=a[n];return s}}),L.geodesic=function(t,a){return new L.Geodesic(t,a)};